package entity;

import java.util.List;

import level.Level;

public class Entity {

	public double x, z;
	public double r = 0.4;

	public Level level;
	public int xTileO = -1;
	public int zTileO = -1;

	protected boolean removed = false;

	protected Entity() {
	}

//	public final void updatePos() {// 尚未研究未知實際用途
//		int xTile = (int) (x + 0.5);
//		int zTile = (int) (z + 0.5);
//		if (xTile != xTileO || zTile != zTileO) {
//			level.getBlock(xTileO, zTileO).removeEntity(this);
//
//			xTileO = xTile;
//			zTileO = zTile;
//
//			if (!removed)
//				level.getBlock(xTileO, zTileO).addEntity(this);// addEntity又叫到updatePos?
//		}
//	}

	public boolean isRemoved() {// 尚未研究未知實際用途
		return removed;
	}

	public void remove() {
		removed = true;
	}

	protected boolean isFree(double xx, double yy) {
		int x0 = (int) (Math.floor(xx   - r)); // public double r = 0.4; in declaration
		int x1 = (int) (Math.floor(xx   + r));
		int y0 = (int) (Math.floor(yy   - r));
		int y1 = (int) (Math.floor(yy   + r));
		
		//System.out.println("check entity.java 44 = "+(x0));
		//System.out.println("check entity.java 45 = "+(x1));
		//System.out.println("check entity.java 49 = "+(level.getBlock(x0, y0).blocks(this)));
		
		if (level.getBlock(x0, y0).blocks(this)) {
			//System.out.println("x0, y0 exp");
			return false;
		}
		if (level.getBlock(x1, y0).blocks(this)) {
			//System.out.println("x1, y0 exp");
			return false;
		}
		if (level.getBlock(x0, y1).blocks(this)) {
			//System.out.println("x0, y1 exp");
			return false;
		}
		if (level.getBlock(x1, y1).blocks(this)) {
			//System.out.println("x1, y1 exp");
			return false;
		}
		
////		int xc = (int) (Math.floor(xx + 0.5));
////		int zc = (int) (Math.floor(yy + 0.5));
////		int rr = 2;
//
////		for (int z = zc - rr; z <= zc + rr; z++) {
////			for (int x = xc - rr; x <= xc + rr; x++) {
////				List<Entity> es = level.getBlock(x, z).entities;
////				for (int i = 0; i < es.size(); i++) {
////					Entity e = es.get(i);
////					if (e == this) continue;
////
////					if (!e.blocks(this, this.x, this.z, r) && e.blocks(this, xx, yy, r)) {
////						e.collide(this);
////						this.collide(e);
////						return false;
////					}
////				}
////			}
////		}
		return true;
	}
	
	protected void collide(Entity entity) {
	}
	
	public boolean blocks(Entity entity, double x2, double z2, double r2) {
//		if (entity instanceof Bullet) {
//			if (((Bullet) entity).owner == this) return false;
//		}
		if (x + r <= x2 - r2) return false;
		if (x - r >= x2 + r2) return false;

		if (z + r <= z2 - r2) return false;
		if (z - r >= z2 + r2) return false;

		return true;
	}
	
	

	public void tick() {

	}
}